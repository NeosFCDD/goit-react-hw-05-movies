{"version":3,"file":"static/js/76.bd784bde.chunk.js","mappings":"2OACA,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA4E,oB,kBCyC5E,EAjCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,oGACOC,MAAM,GAAD,OATpB,uCASoB,OACfP,EADe,4BAVhB,mCAUgB,oBADZ,cACVQ,EADU,gBAIGA,EAASC,OAJZ,OAIdD,EAJc,OAKdJ,EAAQI,EAASL,MALH,2CAAH,qDAQbG,GACD,GAAE,CAACN,IAGFG,GAAQA,EAAKO,OAAS,GAAK,eAAIC,UAAWC,EAAf,SACtBT,EAAKU,KAAI,SAACC,GACT,OACE,gBAAmBH,UAAWC,EAA9B,WACE,gBAAKG,IAAKD,EAAME,aAAN,UAvBR,mCAuBQ,OAAkCF,EAAME,cAAiBC,EAAcC,IAAKJ,EAAMK,QAC5F,iBAAKR,UAAWC,EAAhB,WACE,wBAAKE,EAAMK,QACX,kCAAUL,EAAMM,kBAJXN,EAAMO,GAQlB,OACM,+CAEd,C,8GCxCD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\",\"actor\":\"Cast_actor__tWtXy\"};","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport css from 'components/Cast/Cast.module.css';\nimport defaultImage from 'components/DefaultImg/defaultImage.jpg';\n\nconst API_KEY = \"e6ff7d92338793893a42bd2f0fabea27\";\nconst URL = \"https://api.themoviedb.org/3/movie/\";\nconst IMG_URL = \"https://image.tmdb.org/t/p/w200\";\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    const getCast = async () => {\n      let response = await fetch(\n        `${URL}${movieId}/credits?api_key=${API_KEY}&language=en-US`\n      );\n      response = await response.json();\n      setCast(response.cast);\n    };\n\n    getCast();\n  }, [movieId]);\n\n  return (\n    cast && cast.length > 0 ? (<ul className={css.list}>\n        {cast.map((actor) => {\n          return (\n            <li key={actor.id} className={css.item}>\n              <img src={actor.profile_path ? `${IMG_URL}${actor.profile_path}` : defaultImage} alt={actor.name}></img>\n              <div className={css.actor}>\n                <h3>{actor.name}</h3>\n                <p>Role: {actor.character}</p>\n              </div>\n            </li>\n          );\n        })}\n      </ul>) : <p>No Information found</p>\n  );\n};\n\nexport default Cast;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","cast","setCast","useEffect","getCast","fetch","response","json","length","className","css","map","actor","src","profile_path","defaultImage","alt","name","character","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}